---
title: "EDA"
author: "Chris Hill"
format: 
  html:
    toc: true
    toc-title: "Contents"
    toc-depth: 3
editor: visual
---

```{r}
library(tidyverse)
library(ggpubr)
```

# Introduction



# Data

```{r}
data <- read.csv("diabetes_binary_health_indicators_BRFSS2015.csv")
str(data)
```

## Factor Conversions

Note: "MentHlth" and "PhysHlth" are counts of days

```{r}
data$Diabetes_binary <- factor(data$Diabetes_binary, 
                                levels = c(0, 1, 2), 
                                labels = c("No Diabetes", "Prediabetes", 
                                           "Diabetes"))

binary_vars <- c("HighBP", "HighChol", "CholCheck", "Smoker", "Stroke", 
                 "HeartDiseaseorAttack", "PhysActivity", "Fruits", "Veggies", 
                 "HvyAlcoholConsump", "AnyHealthcare", "NoDocbcCost", 
                 "DiffWalk", "Sex")
data[binary_vars] <- lapply(data[binary_vars], factor, 
                            levels = c(0, 1), 
                            labels = c("No", "Yes"))

data$GenHlth <- factor(data$GenHlth, 
                       levels = 1:5, 
                       labels = c("Excellent", "Very Good", "Good", "Fair", 
                                  "Poor"), 
                       ordered = TRUE)

age_levels <- c("18-24", "25-29", "30-34", "35-39", "40-44", "45-49", 
                "50-54", "55-59", "60-64", "65-69", "70-74", "75-79", 
                "80 or older")
data$Age <- factor(data$Age, 
                   levels = 1:13, 
                   labels = age_levels, 
                   ordered = TRUE)

education_levels <- c("Never attended school or only kindergarten", 
                      "Elementary", 
                      "Some high school", 
                      "High school graduate", 
                      "Some college", 
                      "College graduate")
data$Education <- factor(data$Education, 
                         levels = 1:6, 
                         labels = education_levels, 
                         ordered = TRUE)

income_levels <- c("Less than $10,000", 
                   "$10,000 to $15,000", 
                   "$15,000 to $20,000", 
                   "$20,000 to $25,000", 
                   "$25,000 to $35,000", 
                   "$35,000 to $50,000", 
                   "$50,000 to $75,000", 
                   "$75,000 or more")
data$Income <- factor(data$Income, 
                      levels = 1:8, 
                      labels = income_levels, 
                      ordered = TRUE)

str(data)
```

## Response Variable

```{r}
table(data$Diabetes_binary)
data$Diabetes_binary <- droplevels(data$Diabetes_binary)
table(data$Diabetes_binary)
```

## Missingness

```{r}
colSums(is.na(data))
```

# Summarizations

## Numeric Variables

```{r}
numeric_cols <- names(data)[sapply(data, is.numeric)]

numeric_summaries <- lapply(data[numeric_cols], summary)
numeric_summaries
```

### Boxplots

```{r}
long_data <- data %>%
  select(Diabetes_binary, all_of(numeric_cols)) %>%
  pivot_longer(cols = all_of(numeric_cols), 
               names_to = "Variable", 
               values_to = "Value")

ggplot(long_data, aes(x = Diabetes_binary, 
                      y = Value, 
                      fill = Diabetes_binary)) +
  geom_boxplot() +
  facet_wrap(~Variable, scales = "free_y") +
  labs(
    title = "Boxplots of Numeric Variables Grouped by Diabetes Status",
    x = "Diabetes Status",
    y = "Value"
  ) +
  theme_minimal() +
  theme(legend.position = "none")

```

### Correlation Matrix

```{r}
numeric_vars <- data %>%
  select(all_of(numeric_cols))

correlation_matrix <- cor(numeric_vars, use = "complete.obs")
correlation_matrix
```


## Categorical Variables

### Binary

```{r}
bin_plots <- lapply(binary_vars, function(var) {
  ggplot(data, aes_string(x = var, fill = "Diabetes_binary")) +
    geom_bar(position = "fill") +
    labs(
      x = var,
      y = ""
    ) +
    theme_minimal() +
    theme(
      axis.text.x = element_text(angle = 45, hjust = 1),
      legend.position = "none" 
    )
})

ggarrange(
  plotlist = bin_plots,
  ncol = 5
)
```

### Ordered

```{r}
ordered_vars <- names(data)[sapply(data, is.ordered)]

ord_plots <- lapply(ordered_vars, function(var) {
  ggplot(data, aes_string(x = var, fill = "Diabetes_binary")) +
    geom_bar(position = "fill") +
    labs(
      title = paste(var),
      x = var,
      y = ""
    ) +
    theme_minimal() +
    theme(
      axis.text.x = element_text(angle = 45, hjust = 1),
      legend.position = "none" 
    )
})

ggarrange(
  plotlist = ord_plots,
  ncol = 2
)
```











[Click here for the Modeling Page](Modeling.html)